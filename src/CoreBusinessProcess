核心功能流程设计    by周才邦
==========================================
1.导师添加event，设置一整套时间，做出描述，发布的event默认不会开启

2.导师查看所有已添加的event，选择有效的一个（学生提交截止时间早于当前时间）开启，全体进入选课流程状态

3.将该event存入 ServletContext 全局域 中，对所有用户生效 ，锁定选择状态，在该event自然或者强制结束前不可以再开启另一个event

4.初始化所有学生状态为 Constants.STUDENT_STATUS_NOT_CHOOSE 未进行选择，并删除所有之前的导师记录（tutor_id）
    （因为暂时没有做选课功能的复用，所有清零之前状态）

5.一个学生可以选择三个导师志愿，一个导师可以拥有四个学生  （暂定）

6.学生先进行志愿选择，选择完毕后，会将学生状态设置为 Constants.STUDENT_STATUS_CHOSE 已进行选择

7.进入三轮志愿确定，每个导师显示第一轮志愿为其的学生，做出选择

8.导师在任意一轮中若已选满，则离开本次选择流程;若到最终都没有选满，延到最后进行自动分配

9.最后一个时间结束后，对剩余未匹配的导师和学生自动分配，设置各自状态。

10.生成最终结果表，记录到result表中，result表由 event_id student_id 和每个student_id 对应的 tutor_id 组成
    （注意！！！！ 我把原先用于返回的Result对象重命名为ResultMessage，创建了一个新的Result对象对应于数据库的result表，这个对象包含一个tutor
        的list，而list中的每一个tutor又包含一个student的list，对应了选课结果的一对多对多关系）